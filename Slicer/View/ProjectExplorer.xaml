<UserControl
    xmlns:src="clr-namespace:Slicer.View;assembly=Slicer"
    x:Class="Slicer.View.ProjectExplorer"
    xmlns:properties="clr-namespace:Slicer.View"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:content="clr-namespace:Slicer.Content"
    xmlns:converters="clr-namespace:Slicer.Source.Mvvm.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:intr="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:proj="clr-namespace:Slicer.Source.ProjectExplorer.ProjectItems"
    xmlns:se="clr-namespace:Slicer.Source.ProjectExplorer"
    x:Name="SqualrProjectExplorer"
    d:DesignHeight="256"
    d:DesignWidth="256"
    x:ClassModifier="public"
    DataContext="{Binding ProjectExplorerViewModel, Source={StaticResource ViewModelLocator}}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:BooleanToVisibilityConverter
            x:Key="BooleanToHiddenConverter"
            False="Hidden"
            True="Visible" />
        <converters:BooleanToVisibilityConverter
            x:Key="BooleanToNotHiddenConverter"
            False="Visible"
            True="Hidden" />
        <converters:ProjectItemToIconConverter x:Key="ProjectItemToIconConverter" />
        <converters:ValueConverterGroup x:Key="DirectoryItemVisibilityConverter">
            <converters:IsDirectoryItemConverter />
            <converters:BooleanToVisibilityConverter />
        </converters:ValueConverterGroup>
        <converters:ValueConverterGroup x:Key="AddressItemVisibilityConverter">
            <converters:IsAddressItemConverter />
            <converters:BooleanToVisibilityConverter />
        </converters:ValueConverterGroup>
        <converters:ProjectItemDirectoryConverter x:Key="ProjectItemDirectoryConverter" />
        <ContextMenu
            x:Key="RightClickMenu"
            Background="{StaticResource SqualrColorGray27}"
            BorderBrush="{StaticResource SqualrColorWhite}"
            Foreground="{StaticResource SqualrColorWhite}">
            <MenuItem Command="{Binding PasteSelectionCommand}" Header="Paste" />
        </ContextMenu>
        <ContextMenu
            x:Key="ProjectItemRightClickMenu"
            Background="{StaticResource SqualrColorGray27}"
            BorderBrush="{StaticResource SqualrColorWhite}"
            Foreground="{StaticResource SqualrColorWhite}">
            <MenuItem
                Command="{Binding ProjectExplorerViewModel.AddNewScriptItemCommand, Source={StaticResource ViewModelLocator}}"
                Header="Add New Script"
                Visibility="{Binding ProjectExplorerViewModel.SelectedProjectItem, Converter={StaticResource DirectoryItemVisibilityConverter}, Source={StaticResource ViewModelLocator}}" />
            <MenuItem
                Command="{Binding ProjectExplorerViewModel.AddNewAddressItemCommand, Source={StaticResource ViewModelLocator}}"
                Header="Add New Address"
                Visibility="{Binding ProjectExplorerViewModel.SelectedProjectItem, Converter={StaticResource DirectoryItemVisibilityConverter}, Source={StaticResource ViewModelLocator}}" />
            <MenuItem
                Command="{Binding ProjectExplorerViewModel.AddNewAddressItemCommand, Source={StaticResource ViewModelLocator}}"
                Header="Add New Pointer"
                Visibility="{Binding ProjectExplorerViewModel.SelectedProjectItem, Converter={StaticResource DirectoryItemVisibilityConverter}, Source={StaticResource ViewModelLocator}}" />
            <MenuItem
                Command="{Binding ProjectExplorerViewModel.AddNewInstructionItemCommand, Source={StaticResource ViewModelLocator}}"
                Header="Add New Instruction"
                Visibility="{Binding ProjectExplorerViewModel.SelectedProjectItem, Converter={StaticResource DirectoryItemVisibilityConverter}, Source={StaticResource ViewModelLocator}}" />
            <MenuItem
                Command="{Binding ProjectExplorerViewModel.ToggleSelectionActivationCommand, Source={StaticResource ViewModelLocator}}"
                Header="Toggle Selection"
                Visibility="{Binding ProjectExplorerViewModel.SelectedProjectItem, Converter={StaticResource AddressItemVisibilityConverter}, Source={StaticResource ViewModelLocator}}" />
            <Separator Visibility="{Binding ProjectExplorerViewModel.SelectedProjectItem, Converter={StaticResource AddressItemVisibilityConverter}, Source={StaticResource ViewModelLocator}}" />
            <MenuItem
                Command="{Binding PointerScannerViewModel.PointerScanCommand, Source={StaticResource ViewModelLocator}}"
                Header="Pointer Scan for this Address"
                Visibility="{Binding ProjectExplorerViewModel.SelectedProjectItem, Converter={StaticResource AddressItemVisibilityConverter}, Source={StaticResource ViewModelLocator}}" />
            <Separator Visibility="{Binding ProjectExplorerViewModel.IsSelectionAddress, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource ViewModelLocator}}" />
            <MenuItem
                Command="{Binding CodeTracerViewModel.FindWhatWritesCommand, Source={StaticResource ViewModelLocator}}"
                CommandParameter="{Binding .}"
                Header="Find Code that Writes to this Address"
                Visibility="{Binding ProjectExplorerViewModel.SelectedProjectItem, Converter={StaticResource AddressItemVisibilityConverter}, Source={StaticResource ViewModelLocator}}" />
            <MenuItem
                Command="{Binding CodeTracerViewModel.FindWhatReadsCommand, Source={StaticResource ViewModelLocator}}"
                CommandParameter="{Binding .}"
                Header="Find Code that Reads from this Address"
                Visibility="{Binding ProjectExplorerViewModel.SelectedProjectItem, Converter={StaticResource AddressItemVisibilityConverter}, Source={StaticResource ViewModelLocator}}" />
            <MenuItem
                Command="{Binding CodeTracerViewModel.FindWhatAccessesCommand, Source={StaticResource ViewModelLocator}}"
                CommandParameter="{Binding .}"
                Header="Find Code that Reads or Writes to this Address"
                Visibility="{Binding ProjectExplorerViewModel.SelectedProjectItem, Converter={StaticResource AddressItemVisibilityConverter}, Source={StaticResource ViewModelLocator}}" />
            <Separator />
            <MenuItem Command="{Binding ProjectExplorerViewModel.DeleteSelectionCommand, Source={StaticResource ViewModelLocator}}" Header="Delete Selection" />
            <Separator />
            <MenuItem Command="{Binding ProjectExplorerViewModel.CopySelectionCommand, Source={StaticResource ViewModelLocator}}" Header="Copy" />
            <MenuItem Command="{Binding ProjectExplorerViewModel.PasteSelectionCommand, Source={StaticResource ViewModelLocator}}" Header="Paste" />
            <MenuItem Command="{Binding ProjectExplorerViewModel.CutSelectionCommand, Source={StaticResource ViewModelLocator}}" Header="Cut" />
            <Separator />
            <MenuItem
                Command="{Binding ProjectExplorerViewModel.OpenFileExplorerCommand, Source={StaticResource ViewModelLocator}}"
                CommandParameter="{Binding .}"
                Header="Open in File Explorer" />
        </ContextMenu>
    </UserControl.Resources>
    <Grid>
        <Grid Visibility="{Binding Path=HasProjectRoot, Converter={StaticResource BooleanToNotHiddenConverter}}">
            <Button
                Background="{StaticResource SqualrColorPanel}"
                BorderThickness="1"
                Command="{Binding SelectProjectCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image
                        Width="16"
                        Height="16"
                        Margin="0,0,4,0"
                        Source="{x:Static content:Images.Open}" />
                    <TextBlock Foreground="{StaticResource SqualrColorWhite}" Text="Open or create a project" />
                </StackPanel>
            </Button>
        </Grid>
        <TreeView
            Name="ProjectExplorerTreeView"
            Background="{StaticResource SqualrColorPanel}"
            BorderBrush="White"
            ContextMenu="{StaticResource RightClickMenu}"
            ItemsSource="{Binding ProjectRoot}"
            Visibility="{Binding Path=HasProjectRoot, Converter={StaticResource BooleanToHiddenConverter}}">
            <TreeView.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{Binding Color, Source={StaticResource SqualrColorHighlight}}" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{Binding Color, Source={StaticResource SqualrColorHighlight}}" />
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SqualrColorHighlightBorder}" />
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="ContextMenu" Value="{StaticResource ProjectItemRightClickMenu}" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Style.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Grid.ColumnSpan" Value="2" />
                        </Style>
                    </Style.Resources>
                </Style>
            </TreeView.ItemContainerStyle>
            <!--  Click and Selection events  -->
            <intr:Interaction.Triggers>
                <intr:EventTrigger EventName="SelectedItemChanged">
                    <intr:InvokeCommandAction Command="{Binding SelectProjectItemCommand}" CommandParameter="{Binding ElementName=ProjectExplorerTreeView, Path=SelectedItem}" />
                </intr:EventTrigger>
                <intr:EventTrigger EventName="MouseDoubleClick">
                    <intr:InvokeCommandAction Command="{Binding EditProjectItemCommand}" CommandParameter="{Binding ElementName=ProjectExplorerTreeView, Path=SelectedItem}" />
                </intr:EventTrigger>
            </intr:Interaction.Triggers>
            <!--  Keyboard shortcuts  -->
            <TreeView.InputBindings>
                <KeyBinding
                    Key="C"
                    Command="{Binding CopySelectionCommand}"
                    Modifiers="Ctrl" />
                <KeyBinding
                    Key="X"
                    Command="{Binding CutSelectionCommand}"
                    Modifiers="Ctrl" />
                <KeyBinding
                    Key="V"
                    Command="{Binding PasteSelectionCommand}"
                    Modifiers="Ctrl" />
                <KeyBinding Key="Space" Command="{Binding ToggleSelectionActivationCommand}" />
                <KeyBinding Key="Delete" Command="{Binding DeleteSelectionCommand}" />
            </TreeView.InputBindings>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type proj:ProjectItemView}" ItemsSource="{Binding Path=ChildItems, Converter={StaticResource ProjectItemDirectoryConverter}}">
                    <Border
                        Background="{Binding Background, RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                        BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                        BorderThickness="1">
                        <Grid HorizontalAlignment="Stretch" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <CheckBox
                                Grid.Column="0"
                                Margin="0,0,4,0"
                                IsChecked="{Binding Path=IsActivated}" />
                            <Image
                                Grid.Column="1"
                                Width="16"
                                Height="16"
                                Source="{Binding Converter={StaticResource ProjectItemToIconConverter}}">
                                <intr:Interaction.Triggers>
                                    <intr:EventTrigger EventName="PreviewMouseRightButtonDown">
                                        <intr:ChangePropertyAction
                                            PropertyName="IsSelected"
                                            TargetObject="{Binding}"
                                            Value="true" />
                                    </intr:EventTrigger>
                                </intr:Interaction.Triggers>
                            </Image>
                            <TextBlock
                                Grid.Column="2"
                                Margin="4,0,0,0"
                                Foreground="{StaticResource SqualrColorWhite}"
                                Text="{Binding Path=Name}">
                                <intr:Interaction.Triggers>
                                    <intr:EventTrigger EventName="PreviewMouseRightButtonDown">
                                        <intr:ChangePropertyAction
                                            PropertyName="IsSelected"
                                            TargetObject="{Binding}"
                                            Value="true" />
                                    </intr:EventTrigger>
                                </intr:Interaction.Triggers>
                            </TextBlock>
                            <TextBlock
                                Grid.Column="3"
                                Margin="4,0,0,0"
                                Foreground="{StaticResource SqualrColorGray74}"
                                Text="{Binding Path=DisplayValue}">
                                <intr:Interaction.Triggers>
                                    <intr:EventTrigger EventName="PreviewMouseRightButtonDown">
                                        <intr:ChangePropertyAction
                                            PropertyName="IsSelected"
                                            TargetObject="{Binding}"
                                            Value="true" />
                                    </intr:EventTrigger>
                                </intr:Interaction.Triggers>
                            </TextBlock>
                        </Grid>
                    </Border>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>